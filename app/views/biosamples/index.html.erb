<%= javascript_include_tag 'DataTables-1.8.2/index' %>
<%= stylesheet_link_tag 'data_tables' %>
<script type="text/javascript">
    jQuery.noConflict();
    var $j = jQuery;
</script>
<%= javascript_include_tag 'calendar_date_select/calendar_date_select' %>
<%= javascript_include_tag 'strain', 'biosample' %>
<%= stylesheet_link_tag 'calendar_date_select/default', "biosamples" %>

<%
   select_truncate_length=120
   all_organisms = Organism.order(:title)
   default_selected_organisms = try_block { current_user.person.projects.first.organism_ids }.blank? ? [0] : try_block { current_user.person.projects.first.organism_ids }
-%>


<%= show_title("Browse Organisms, Strains, #{I18n.t('biosamples.sample_parent_term').pluralize} and Samples") %>


<br/>
<div class="fold" style="margin-left: 1em; width: 35em">
  <div class="foldTitle">
    Organism
  </div>
  <div class="foldContent">
    <p class="none_text">Please select the Organisms to browse the associated Strains</p>
    <%= select_tag "strain[organism_ids]",
                   options_for_select([["Select Organisms ...", 0]]|all_organisms.collect { |o| [truncate(h(o.title), :length => select_truncate_length), o.id] }, :selected => default_selected_organisms),
                 {:onchange=> organism_selection_onchange_function,
                    :multiple => true, :size => 15, :style => "width:30em"} -%>

  </div>
</div>
  
  <div id="existing_strains">
    <div id="existing_strains_spinner">
        <center>
          <%= image_tag "ajax-loader-large.gif" -%>
        </center>
    </div>
  </div>
  <div id="existing_specimens">
    <% if Seek::Config.is_virtualliver %>
    <div id="existing_specimens_spinner" style="width: 48%;margin-left: 0.5em;">
          <center>
            <%= image_tag "ajax-loader-large.gif" -%>
          </center>
     </div>
    <% end %>
  </div>
  <div id="existing_samples"></div>


<script type="text/javascript">
    var organism = new Array();
    check_show_existing_items('strain_organism_ids', 'existing_strains', '<%=url_for(:controller => 'biosamples', :action => 'existing_strains')-%>');
    if(<%= Seek::Config.is_virtualliver%>){
        check_show_existing_items('strain_organism_ids', 'existing_specimens', '<%=url_for(:controller => 'biosamples', :action => 'existing_specimens')-%>');
    }

    function selectAll(table) {
        var table_name = table;
        var table = eval(table);
        var aTrs = table.fnGetNodes();
        for (var i = 0; i < aTrs.length; i++) {
            aTrs[i].cells[0].firstChild.checked = true;
        }
        ;
        if (table_name == 'strain_table') {
        <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_specimens'},
                           :method => :get,
                           :with => "'strain_ids=' + getSelectedStrains()",
                           :before=>"show_large_ajax_loader('existing_specimens')");%>
            show_existing_specimens();
            hide_existing_samples();
        } else if (table_name == 'specimen_table') {
        <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_samples'},
                           :method => :get,
                           :with => "'specimen_ids=' + getSelectedSpecimens()",
                           :before=>"show_large_ajax_loader('existing_samples')");%>
            show_existing_samples();
        }
    }

    function deselectAll(table) {
        var table_name = table;
        var table = eval(table);
        var aTrs = table.fnGetNodes();
        for (var i = 0; i < aTrs.length; i++) {
            aTrs[i].cells[0].firstChild.checked = false;
        }
        ;
        if (table_name == 'strain_table') {
        <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_specimens'},
                           :method => :get,
                           :with => "'strain_ids=' + getSelectedStrains()+ '&organism_ids='+$F('strain_organism_ids')",
                           :before=>"show_large_ajax_loader('existing_specimens')");%>
            show_existing_specimens();
            hide_existing_samples();
        } else if (table_name == 'specimen_table') {
        <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_samples'},
                           :method => :get,
                           :with => "'specimen_ids=' + getSelectedSpecimens()",
                           :before=>"show_large_ajax_loader('existing_samples')");%>
        }
    }

    function removeRowAfterDestroy(table, id, id_column_position) {
        var table = eval(table)
        var data = table.fnGetData();
        for (var i = 0; i < data.length; i++) {
            if (data[i][id_column_position] == id.toString()) {
                table.fnDeleteRow(i);
                break;
            }
        }
    }

    function updateStrainRow(row_data, id_column_position) {
        var data = strain_table.fnGetData();
        for (var i = 0; i < data.length; i++) {
            //look for the position which is updated
            if (data[i][id_column_position] == row_data[id_column_position]) {
                //if first column hasn't been changed, update row, but without checkbox column (second column)
                if (data[i][0] == row_data[0]) {
                    for (var j = 2; j < row_data.length; j++) {
                        strain_table.fnUpdate(row_data[j], i, j);
                    }
                }
                //if the first column is updated, refresh the table
                else {
                    check_show_existing_items('strain_organism_ids', 'existing_strains', '<%=url_for(:controller => 'biosamples', :action => 'existing_strains')-%>');
                    hide_existing_specimens();
                    hide_existing_samples();
                    break;
                }
            }
        }
    }

    function updateSpecimenRow(row_data, id_column_position) {
        var data = specimen_table.fnGetData();
        for (var i = 0; i < data.length; i++) {
            //look for the position which is updated
            if (data[i][id_column_position] == row_data[id_column_position]) {
                //if first column hasn't been changed, update row, but without checkbox column (second column)
                if (data[i][0] == row_data[0]) {
                    for (var j = 2; j < row_data.length; j++) {
                        specimen_table.fnUpdate(row_data[j], i, j);
                    }
                }
                //if the first column is updated, refresh the table
                else {
                <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_specimens'},
                                   :method => :get,
                                   :with => "'strain_ids=' + getSelectedStrains()");%>
                    show_existing_specimens();
                    hide_existing_samples();
                    break;
                }
            }
        }
    }

    function updateSampleRow(row_data, id_column_position) {
        var data = sample_table.fnGetData();
        for (var i = 0; i < data.length; i++) {
            //look for the position which is updated
            if (data[i][id_column_position] == row_data[id_column_position]) {
                //if first column hasn't been changed, update row
                if (data[i][0] == row_data[0]) {
                    sample_table.fnUpdate(row_data, i, 0);
                }
                //if the first column is updated, refresh the table
                else {
                <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_samples'},
                                   :method => :get,
                                   :with => "'specimen_ids=' + getSelectedSpecimens()");%>
                    show_existing_samples();
                    break;
                }
            }
        }
    }

    function loadNewStrainAfterCreation(strain, organism) {
        //if there is strain table
        if (strain_table.length > 0) {
            var data = strain_table.fnGetData();
            //if there is data in strain table
            if (data.length > 0) {
                var load = false;
                for (var i = 0; i < data.length; i++) {
                    var pattern = new RegExp(organism);
                    if (pattern.test(data[i][0]))
                        load = true;
                }

                if (load) {
                    var a = strain_table.fnAddData(strain);
                    var nTr = strain_table.fnSettings().aoData[a[0]].nTr;
                    $j(nTr).addClass('gradeA');
                }
            }
            else {
               check_show_existing_items('strain_organism_ids', 'existing_strains', '<%=url_for(:controller => 'biosamples', :action => 'existing_strains')-%>');
            }
        }
        else {
            check_show_existing_items('strain_organism_ids', 'existing_strains', '<%=url_for(:controller => 'biosamples', :action => 'existing_strains')-%>');
        }
    }

    function loadNewSpecimenAfterCreation(specimen, strain_id,is_dummy_strain) {
        if (specimen_table.length > 0) {
            var data = specimen_table.fnGetData();
            if (data.length > 0) {
                var load = false;
                for (var i = 0; i < data.length; i++) {
                    var pattern = new RegExp('ID=' + new Number(strain_id).toString());
                    if (pattern.test(data[i][0])) {
                        load = true;
                    }
                }

                if (load) {
                    specimen_table.fnAddData(specimen);
                }
            }
            else {
            <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_specimens'},
                               :method => :get,
                               :with => "'strain_ids=' + getSelectedStrains()");%>
                show_existing_specimens();
            }
        } else {
            if(getSelectedStrains().include(strain_id) || is_dummy_strain=="true" ) {
                <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_specimens'},
                                   :method => :get,
                                   :with => "'strain_ids=' + getSelectedStrains()+ '&organism_ids='+$F('strain_organism_ids')");%>
                show_existing_specimens();
            }
        }
    }

    function loadNewSampleAfterCreation(sample, specimen_title) {
        if (sample_table.length > 0) {
            var data = sample_table.fnGetData();
            if (data.length > 0) {
                var load = false;
                for (var i = 0; i < data.length; i++) {
                    var pattern = new RegExp(specimen_title);
                    if (pattern.test(data[i][0])) {
                        load = true;
                    }
                }

                if (load) {
                    var a = sample_table.fnAddData(sample);
                    var nTr = sample_table.fnSettings().aoData[a[0]].nTr;
                    $j(nTr).addClass('gradeX');

                }
            }
            else {
            <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_samples'},
                               :method => :get,
                               :with => "'specimen_ids=' + getSelectedSpecimens()");%>
                show_existing_samples();
            }
        } else {
        <%=remote_function(:url => {:controller => 'biosamples', :action => 'existing_samples'},
                           :method => :get,
                           :with => "'specimen_ids=' + getSelectedSpecimens()");%>
            show_existing_samples();
        }
      }

</script>
