<% workflow_port = (port.is_a?(TavernaPlayer::RunPort::Input) ? port.run.executed_workflow.input_ports : port.run.executed_workflow.output_ports).detect {|wp| wp.name == port.name} %>
<% download_url =  (port.is_a?(TavernaPlayer::RunPort::Input) ? "/runs/#{port.run.id}/download/input/#{port.name}" : "/runs/#{port.run.id}/download/output/#{port.name}") %>

<h3>
  <%= port.name %>
  <% unless workflow_port[:description].blank? %>
    <%= help_icon(simple_format(workflow_port[:description])) -%>
  <% end %>
  <%
     mime_type = ''
     if !port.metadata.blank? && !port.metadata[:type].blank?
       mime_type = port.depth == 0 ? port.metadata[:type] : "(list of depth #{port.depth})"
     end
  %>

  <%= "<span class='mime_type'>(#{mime_type})</span>".html_safe unless mime_type.blank? %>



  <ul class="sectionIcons" style="font-weight: normal; vertical-align:middle; text-align:right; position:relative; top:-15px; /* ugly, but necessary relative positioning */">
    <li><%= render :partial => "download_link", :locals => { :download_link_name => "Download value",
                                                             :download_url => download_url } %></li>
  </ul>
  <% if port.respond_to?(:data_file) && port.data_file %>
    <ul class="originating_data_file">
      ...this data originated from the <%= t('data_file').downcase %> <%= link_to port.data_file.title,main_app.data_file_path(port.data_file,:version=>port.data_file_version) %>.
    </ul>
  <% end %>
</h3>

<p>
  <%= TavernaPlayer.port_renderer.render(port) %>
</p>